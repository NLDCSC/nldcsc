[tox]
envlist = py310, py311, {py310, py311}-loggers, {py310, py311}-flask_app, {py310, py311}-sql_migrate, {py310, py311}-http_apis, {py310, py311}-plugins, {py310, py311}-flask_plugins
skip_missing_interpreters = true


[gh-actions]
python =
    3.10: py310,
    3.11: py311

[testenv]
deps=-r{toxinidir}/requirements/test.txt

[testenv:{py310, py311}]
deps=
    -r{toxinidir}/requirements/test.txt
    requests
extras = 
    flask_plugins
    sql_migrations
    flask_managers
    plugins
    loggers
commands = {posargs:pytest}

[testenv:{py310, py311}-loggers]
extras = loggers
commands = pytest {posargs} tests/test_logger.py

[testenv:{py310, py311}-flask_app]
extras = flask_managers
commands = pytest {posargs} tests/test_flask_app_manager.py

[testenv:{py310, py311}-sql_migrate]
extras = sql_migrations
commands = pytest {posargs} tests/test_sqlalchemy_migrate.py

[testenv:{py310, py311}-http_apis]
extras = http_apis
commands = pytest {posargs} tests/test_http_apis.py

[testenv:{py310, py311}-plugins]
extras = plugins
commands = pytest {posargs} tests/test_plugins.py

[testenv:{py310, py311}-flask_plugins]
extras = flask_plugins
commands = pytest {posargs} tests/test_sql_migrate.py

[pytest]
addopts = -v
env =
    LOG_FILE_PATH=/tmp/test_data
    LOG_FILE_NAME=test.log
    SYSLOG_ENABLE=True

[coverage:run]
omit =
    */tests/*
    **/*.txt
    **/*.md
    */setup.py

[coverage:report]
exclude_also =
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod
